name: integration and deploy to gcp workflow

on:
  push:
    branches: ["develop", "master"]

env:
  PROJECT: user-management
  APPLICATION: baccoapp
  SONAR_EXCLUSIONS: "**/Migrations/**,**/Program.cs,**/**.Infrastructure/**"
  REGISTRY: "us-east1-docker.pkg.dev/baccoapp-358901/gcr-baccoapp"
  PROJECT_ID: baccoapp-358901
  DOCKERFILE_PATH_API: ./BaccoApp.UserManagement.Api/Dockerfile
  ENVIRONMENT: ${{ github.ref_name }}
  TAG: ${{ github.run_number }}
  CLUSTER_NAME: baccoapp-cluster-1
  LOCATION: us-east1
  HELM_PATH_API: ./helm-charts/api

jobs:
  env_setup:
    name: setup environment variables
    runs-on: ubuntu-22.04
    outputs:
      project: ${{ steps.env_setup.outputs.project }}
      application: ${{ steps.env_setup.outputs.application }}
      sonar_exclusions: ${{ steps.env_setup.outputs.sonar_exclusions }}
      registry: ${{ steps.env_setup.outputs.registry }}
      project_id: ${{ steps.env_setup.outputs.project_id }}
      dockerfile_path_api: ${{ steps.env_setup.outputs.dockerfile_path_api }}
      environment: ${{ steps.env_setup.outputs.environment }}
      tag: ${{ steps.env_setup.outputs.tag }}
      cluster_name: ${{ steps.env_setup.outputs.cluster_name }}
      location: ${{ steps.env_setup.outputs.location }}
      helm_path_api: ${{ steps.env_setup.outputs.helm_path_api }}

    steps:
      - name: print inputs passed to the reusable workflow
        id: env_setup
        run: |
          echo "::set-output name=project::$PROJECT"
          echo "::set-output name=application::$APPLICATION"
          echo "::set-output name=sonar_exclusions::$SONAR_EXCLUSIONS"
          echo "::set-output name=registry::$REGISTRY"
          echo "::set-output name=project_id::$PROJECT_ID"
          echo "::set-output name=dockerfile_path_api::$DOCKERFILE_PATH_API"
          echo "::set-output name=environment::$ENVIRONMENT"
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=cluster_name::$CLUSTER_NAME"
          echo "::set-output name=location::$LOCATION"
          echo "::set-output name=helm_path_api::$HELM_PATH_API"

  sonar_scanner:
    name: sonar scanner from base repository
    needs: [env_setup]
    uses: "jsrsolarte/BaccoApp.Base/.github/workflows/sonarcloud-scanner-dotnet-job.yml@main"
    with:
      project: ${{ needs.env_setup.outputs.project }}
      application: ${{ needs.env_setup.outputs.application }}
      sonar_exclusions: ${{ needs.env_setup.outputs.sonar_exclusions }}
    secrets:
      sonar_token: ${{ secrets.SONAR_TOKEN }}

  push_gcr_api:
    name: push gcr api
    needs: [sonar_scanner, env_setup]
    uses: "jsrsolarte/BaccoApp.Base/.github/workflows/publish-gcr-job.yml@main"
    with:
      registry: ${{ needs.env_setup.outputs.registry }}
      project_id: ${{ needs.env_setup.outputs.project_id }}
      application: ${{ needs.env_setup.outputs.application }}
      project: ${{ needs.env_setup.outputs.project }}-api
      environment: ${{ needs.env_setup.outputs.environment }}
      dockerfile_path: ${{ needs.env_setup.outputs.dockerfile_path_api }}
      tag: ${{ needs.env_setup.outputs.tag }}
    secrets:
      gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}

  deploy_gke_api:
    name: deploy api GKE
    needs: [push_gcr_api, env_setup]
    uses: "jsrsolarte/BaccoApp.Base/.github/workflows/deploy-helm-gke.yml@main"
    with:
      cluster_name: ${{ needs.env_setup.outputs.cluster_name }}
      location: ${{ needs.env_setup.outputs.location }}
      project_id: ${{ needs.env_setup.outputs.project_id }}
      project: ${{ needs.env_setup.outputs.project }}-api
      environment: ${{ needs.env_setup.outputs.environment }}
      application: ${{ needs.env_setup.outputs.application }}
      tag: ${{ needs.env_setup.outputs.tag }}
      helm_path: ${{ needs.env_setup.outputs.helm_path_api }}

    secrets:
      gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}